% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/InitializationFunctions.R
\name{runBurnInSchemes}
\alias{runBurnInSchemes}
\title{Run burn-in breeding scheme simulations}
\usage{
runBurnInSchemes(
  bsp,
  nBurnInCycles,
  selCritPop = "selCritIID",
  selCritPipe = "selCritIID",
  iniFunc = "initializeScheme",
  productFunc = "productPipeline",
  popImprovFunc = "popImprov1Cyc",
  TrainingPopSel = NULL,
  nReplications = 1,
  nSimCores = 1,
  nBLASthreads = NULL,
  nThreadsMacs2 = NULL
)
}
\arguments{
\item{bsp}{A list of breeding scheme parameters.}

\item{nBurnInCycles}{Integer number of cycles to as 'burn-in' using the \code{selCritPop} and \code{selCritPipe} settings.}

\item{selCritPop}{string, overrides the selCrit in \code{bsp} for the burn-in stage.}

\item{selCritPipe}{string, overrides the selCrit in \code{bsp} for the burn-in stage.}

\item{iniFunc}{string, Function to initialize the breeding program.}

\item{productFunc}{string, Function to advance the product pipeline by one generation}

\item{popImprovFunc}{string, Function to improve the breeding population and select parents to initiate the next cycle of the breeding scheme}

\item{nReplications}{Integer number of replications of the specific breeding scheme to run}

\item{nSimCores}{Integer, number of cores to optionally execute replicate simulations in parallel}

\item{nBLASthreads}{number of cores for each worker to use for multi-thread BLAS. Will speed up, for example, genomic predictions when using selCritGRM. Careful to balance with other forms of parallel processing.}

\item{nThreadsMacs2}{uses the nThreads argument in \code{runMacs2}, parallelizes founder sim by chrom.}
}
\value{
A \code{records} object containing the phenotypic records retained of the breeding scheme
}
\description{
Allows users to run simulation and then continue again later. Output is direct input for \code{runSchemesPostBurnIn}.
Runs potentially multiple replications and optionally in parallel.
}
\details{
A wrapper to initiate the breeding program then iterate cycles of product pipeline and population improvement
}
