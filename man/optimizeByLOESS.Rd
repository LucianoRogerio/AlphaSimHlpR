% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RunBreedingScheme.R
\name{optimizeByLOESS}
\alias{optimizeByLOESS}
\title{optimizeByLOESS function}
\usage{
optimizeByLOESS(
  batchSize,
  targetBudget,
  percentRanges,
  startCycle,
  tolerance,
  baseFile = NULL,
  maxNumBatches = 10,
  initializeFunc,
  productPipeline,
  populationImprovement,
  bsp,
  nCores = 1
)
}
\arguments{
\item{batchSize}{Integer number of simulations between LOESS fits}

\item{targetBudget}{Numeric value that you want the budget adjusted to}

\item{percentRanges}{Numeric matrix of percentage budget allocation to crossing (F1) and all of the stages.  If there is a stage that is genotyped, the genotyping cost is added to that stage}

\item{startCycle}{Integer the start cycle from which to measure gain. The end cycle will just be the last cycle}

\item{tolerance}{Numerical difference between min amd max percentage budgets for all stages}

\item{baseFile}{Filename if you want to have progress saved by batch}

\item{initializeFunc}{Function to initialize the breeding program}

\item{productPipeline}{Function to advance the product pipeline by one generation}

\item{populationImprovement}{Function to improve the breeding population and select parents to initiate the next cycle of the breeding scheme}

\item{bsp}{A list of breeding scheme parameters. It contains pipeline parameters: nParents, nCrosses, nProgeny, checks, nStages, errVars, nReps, nEntries, nChks, stageNames, and nCyclesToKeepRecords. It contains species / population parameters: nChr, segSites, nQTL, genVar, meanDD, varDD, nSNP}

\item{nCores}{Integer number of cores to use for parallel simulation}
}
\value{
Numeric matix with all simulations budget allocations, gen mean change, gen std dev change, total cost.
}
\description{
function to optimize a two-part strategy breeding scheme:
1. Simulate a batch using given percentage ranges
2. Perform LOESS fit to the gains
3. Find budget with best estimated gain
4. Calculate new percentage ranges: any simulation within 2*StdErr of best
Go back to 1.
}
\details{
A wrapper to repeatedly simulate a scheme with different budget allocations to find optimal allocations
}
\examples{

}
